{"version":3,"sources":["calculations.js","InputCell.js","TableRows.js","Table.js","App.js","index.js"],"names":["addArr","arr","reduce","acc","curr","parseFloat","balance","row","dfs","chunk","newRow","forEach","col","i","leftDf","rightDf","leftMoment","rightMoment","push","slice","flattenDeep","length","carryOver","chain","map","pair","left","flatMapDeep","value","InputCell","valueArr","handleChange","useContext","globalContext","className","v","TextField","type","onChange","bind","variant","size","Cell","TableRows","rows","sum","index","cell","Table","getDFs","getFEMs","d","React","createContext","initialFEMS","initialDFS","App","useState","setDfs","fems","setFems","precision","setPrecision","valueWithIndex","item","calculateRows","lastRow","action","Provider","updater","e","prevValue","target","digit","round","fem","rowsAddition","Box","my","textAlign","ButtonGroup","color","Button","onClick","produce","draft","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e707cdb9.chunk.js","sourcesContent":["import { chain, chunk, flattenDeep, slice } from \"lodash\";\n\nfunction addArr(arr) {\n  return arr.reduce((acc, curr) => acc + parseFloat(curr), 0);\n}\n\nexport function balance(row, dfs) {\n  row = chunk([0, ...row, 0], 2);\n  dfs = chunk([0, ...dfs, 0], 2);\n\n  const newRow = [];\n\n  row.forEach((col, i) => {\n    const leftDf = dfs[i][0];\n    const rightDf = dfs[i][1];\n\n    const leftMoment = leftDf * addArr(col) * -1;\n    const rightMoment = rightDf * addArr(col) * -1;\n\n    newRow.push([leftMoment, rightMoment]);\n  });\n\n  return slice(flattenDeep(newRow), 1, flattenDeep(newRow).length - 1);\n}\n\nexport function carryOver(row) {\n  function calc(pair) {\n    const left = pair[0];\n    const right = pair[1];\n\n    return [right / 2, left / 2];\n  }\n\n  return chain(row).chunk(2).map(calc).flatMapDeep().value();\n}\n","import { TextField } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { globalContext } from \"./App\";\n\nfunction InputCell({ valueArr }) {\n  const { handleChange } = useContext(globalContext);\n\n  return (\n    <td>\n      <div className=\"t-cell\">\n        {valueArr.map((v, i) => {\n          return (\n            <div key={v + i}>\n              <TextField\n                type=\"text\"\n                value={v.value}\n                onChange={handleChange.bind(null, v)}\n                variant=\"outlined\"\n                size=\"small\"\n              />\n            </div>\n          );\n        })}\n      </div>\n    </td>\n  );\n}\n\nexport default InputCell;\n","import React, { useContext } from \"react\";\nimport { globalContext } from \"./App\";\n\nfunction Cell({ valueArr }) {\n  return (\n    <td>\n      <div className=\"t-cell\">\n        {valueArr.map((col, i) => (\n          <div key={valueArr + i}>{col}</div>\n        ))}\n      </div>\n    </td>\n  );\n}\n\nexport default function TableRows() {\n  let { rows, sum } = useContext(globalContext);\n\n  function balanceOrCarry(index) {\n    if (index % 2 === 0) return \"Balance\";\n    return \"Carry Over\";\n  }\n\n  return (\n    <>\n      {rows.map((row, i) => (\n        <tr>\n          <td className=\"left-heading\">{balanceOrCarry(i)}</td>\n          {row.map((cell) => (\n            <Cell valueArr={cell} />\n          ))}\n        </tr>\n      ))}\n      <tr className=\"sum\">\n        <td>Sum</td>\n        {sum.map((cell, i) => (\n          <Cell valueArr={cell} />\n        ))}\n      </tr>\n    </>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { globalContext } from \"./App\";\nimport InputCell from \"./InputCell\";\nimport TableRows from \"./TableRows\";\n\nexport default function Table() {\n  const { getDFs, getFEMs } = useContext(globalContext);\n\n  return (\n    <table>\n      <tbody>\n        <tr>\n          <td className=\"left-heading\">Distribution Factor</td>\n          {getDFs().map((d, i) => (\n            <InputCell valueArr={d} key={i} />\n          ))}\n        </tr>\n        <tr>\n          <td className=\"left-heading\">FEM</td>\n          {getFEMs().map((d, i) => (\n            <InputCell valueArr={d} key={i} />\n          ))}\n        </tr>\n        <TableRows />\n      </tbody>\n    </table>\n  );\n}\n","import { Box, Button, ButtonGroup } from \"@material-ui/core\";\nimport produce from \"immer\";\nimport { chain, chunk, round } from \"lodash\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { balance, carryOver } from \"./calculations\";\nimport Table from \"./Table\";\n\n// const fem = [\n// [0, -1.6],\n// [1.6, -6],\n// [6, -8],\n// [4, 0],\n// ];\n// const dfs = [\n//   [0, 0],\n//   [0.6, 0.4],\n//   [0.5, 0.5],\n//   [0, 0],\n// ];\n\nexport const globalContext = React.createContext({});\nconst initialFEMS = [-1.6, 1.6, -6, 6, -8, 4];\nconst initialDFS = [0, 0.6, 0.4, 0.5, 0.5, 0];\nconst initialPrecision = 5;\n\nfunction App() {\n  const [dfs, setDfs] = useState(initialDFS);\n  const [fems, setFems] = useState(initialFEMS);\n  const [precision, setPrecision] = useState(initialPrecision);\n\n  function valueWithIndex(arr) {\n    return arr.map((item, i) => ({ index: i, value: item }));\n  }\n\n  function getDFs() {\n    return chunk(\n      valueWithIndex(dfs).map((v) => ({ ...v, updater: setDfs })),\n      2\n    );\n  }\n\n  function getFEMs() {\n    return chunk(\n      valueWithIndex(fems).map((v) => ({ ...v, updater: setFems })),\n      2\n    );\n  }\n\n  function calculateRows() {\n    let lastRow = fems;\n    const rows = [];\n    let action = balance;\n\n    for (let i = 0; i < precision; i++) {\n      rows.push(action(lastRow, dfs));\n      action = action === balance ? carryOver : balance;\n      lastRow = rows[rows.length - 1];\n    }\n\n    return rows;\n  }\n\n  function tidyResult(row) {\n    function tidyDigit(digit) {\n      if (digit === -0) digit = 0;\n\n      return round(digit, 4);\n    }\n\n    return chunk(row.map(tidyDigit), 2);\n  }\n\n  function rowsAddition() {\n    const rows = calculateRows();\n    const sum = fems.map((fem, i) => {\n      let sum = 0;\n      sum += parseFloat(fem);\n      rows.forEach((row) => {\n        sum += row[i];\n      });\n\n      return round(sum, 4);\n    });\n    return chunk(sum, 2);\n  }\n\n  function handleChange(v, e) {\n    v.updater((prevValue) => {\n      prevValue[v.index] = e.target.value;\n      return [...prevValue];\n    });\n  }\n\n  function addJoint() {\n    setDfs((dfs) => {\n      return produce(dfs, (draft) => {\n        draft.splice(1, 0, 0.5, 0.5);\n      });\n    });\n    setFems((fems) => {\n      return produce(fems, (draft) => {\n        draft.splice(1, 0, 0, 0);\n      });\n    });\n  }\n\n  function reset() {\n    setDfs([...initialDFS]);\n    setFems([...initialFEMS]);\n    setPrecision(initialPrecision);\n  }\n\n  function addPrec() {\n    setPrecision(precision + 1);\n  }\n  function removePrec() {\n    if (precision === 2) return;\n    setPrecision(precision - 1);\n  }\n\n  return (\n    <globalContext.Provider\n      value={{\n        getDFs,\n        getFEMs,\n        handleChange,\n        dfs,\n        fems,\n        rows: chain(calculateRows()).map(tidyResult).value(),\n        sum: rowsAddition(),\n      }}\n    >\n      <main>\n        <Box my={4} textAlign=\"center\">\n          <ButtonGroup color=\"primary\">\n            <Button onClick={addJoint}>Add Joint</Button>\n            <Button onClick={reset}>Reset</Button>\n            <Button onClick={addPrec}>Add precision</Button>\n            <Button onClick={removePrec}>Reduce precision</Button>\n          </ButtonGroup>\n        </Box>\n        <Table />\n      </main>\n    </globalContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}